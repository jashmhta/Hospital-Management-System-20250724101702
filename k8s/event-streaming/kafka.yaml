apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: hms-kafka-cluster
  namespace: event-streaming
spec:
  kafka:
    version: 3.4.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        authentication:
          type: scram-sha-512
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        type: route
        tls: true
        authentication:
          type: scram-sha-512
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: '3.4'
      auto.create.topics.enable: false
      log.retention.hours: 168
      log.retention.bytes: 1073741824
      log.segment.bytes: 1073741824
      log.cleanup.policy: delete
      group.initial.rebalance.delay.ms: 0
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 100Gi
          deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
    resources:
      requests:
        memory: 2Gi
        cpu: 1000m
      limits:
        memory: 4Gi
        cpu: 2000m
    jvmOptions:
      -Xms: 1G
      -Xmx: 2G
    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - hms-kafka-cluster-kafka
                topologyKey: 'kubernetes.io/hostname'
        terminationGracePeriodSeconds: 120
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 10Gi
      deleteClaim: false
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 1Gi
        cpu: 1000m
    jvmOptions:
      -Xms: 512M
      -Xmx: 512M
    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - hms-kafka-cluster-zookeeper
                topologyKey: 'kubernetes.io/hostname'
        terminationGracePeriodSeconds: 120
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: patient-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 604800000 # 7 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: billing-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 2592000000 # 30 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: pharmacy-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 604800000 # 7 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: clinical-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 604800000 # 7 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: audit-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 24
  replicas: 3
  config:
    retention.ms: 7776000000 # 90 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: notification-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 259200000 # 3 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: analytics-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 604800000 # 7 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: system-events
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  partitions: 12
  replicas: 3
  config:
    retention.ms: 604800000 # 7 days
    segment.bytes: 1073741824
    cleanup.policy: delete
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: patient-service
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
      # Produce to patient-events
      - resource:
          type: topic
          name: patient-events
          patternType: literal
        operation: Write
        host: '*'
      # Consume from patient-events
      - resource:
          type: topic
          name: patient-events
          patternType: literal
        operation: Read
        host: '*'
      # Consume from other services' events
      - resource:
          type: topic
          name: billing-events
          patternType: literal
        operation: Read
        host: '*'
      - resource:
          type: topic
          name: pharmacy-events
          patternType: literal
        operation: Read
        host: '*'
      - resource:
          type: topic
          name: clinical-events
          patternType: literal
        operation: Read
        host: '*'
      # Produce to notification-events
      - resource:
          type: topic
          name: notification-events
          patternType: literal
        operation: Write
        host: '*'
      # Produce to audit-events
      - resource:
          type: topic
          name: audit-events
          patternType: literal
        operation: Write
        host: '*'
      # Consumer group
      - resource:
          type: group
          name: patient-service
          patternType: literal
        operation: Read
        host: '*'
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: analytics-service
  namespace: event-streaming
  labels:
    strimzi.io/cluster: hms-kafka-cluster
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
      # Analytics service can read from all event streams for analysis
      - resource:
          type: topic
          name: '*'
          patternType: literal
        operation: Read
        host: '*'
      # Produce to analytics-events
      - resource:
          type: topic
          name: analytics-events
          patternType: literal
        operation: Write
        host: '*'
      # Produce to audit-events
      - resource:
          type: topic
          name: audit-events
          patternType: literal
        operation: Write
        host: '*'
      # Consumer group
      - resource:
          type: group
          name: analytics-service
          patternType: literal
        operation: Read
        host: '*'
