(()=>{var e={};e.id=5066,e.ids=[5066],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33159:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61688:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>E,routeModule:()=>d,serverHooks:()=>x,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>y});var s={};t.r(s),t.d(s,{GET:()=>p,POST:()=>c});var a=t(2179),o=t(20540),n=t(57395),i=t(8306),u=t(72482);!function(){var e=Error("Cannot find module '@/lib/hr/salary-service'");throw e.code="MODULE_NOT_FOUND",e}();let l=u.z.object({name:u.z.string().min(1,"Name is required"),description:u.z.string().optional(),components:u.z.array(u.z.object({name:u.z.string().min(1,"Component name is required"),type:u.z.enum(["EARNING","DEDUCTION","TAX"],{errorMap:()=>({message:"Type must be EARNING, DEDUCTION, or TAX"})}),calculationType:u.z.enum(["FIXED","PERCENTAGE","FORMULA"],{errorMap:()=>({message:"Calculation type must be FIXED, PERCENTAGE, or FORMULA"})}),value:u.z.number(),formula:u.z.string().optional(),taxable:u.z.boolean(),isBase:u.z.boolean().optional()})).min(1,"At least one component is required")});async function c(e){try{let r=await e.json(),t=l.safeParse(r);if(!t.success)return i.NextResponse.json({error:"Validation error",details:t.error.format()},{status:400});let s=await Object(function(){var e=Error("Cannot find module '@/lib/hr/salary-service'");throw e.code="MODULE_NOT_FOUND",e}()).createSalaryStructure(t.data);return i.NextResponse.json(s)}catch(e){return console.error("Error creating salary structure:",e),i.NextResponse.json({error:"Failed to create salary structure",details:e.message},{status:500})}}async function p(e){try{let e=await Object(function(){var e=Error("Cannot find module '@/lib/hr/salary-service'");throw e.code="MODULE_NOT_FOUND",e}()).listSalaryStructures();return i.NextResponse.json({salaryStructures:e})}catch(e){return console.error("Error fetching salary structures:",e),i.NextResponse.json({error:"Failed to fetch salary structures",details:e.message},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/hr/payroll/salary-structures/route",pathname:"/api/hr/payroll/salary-structures",filename:"route",bundlePath:"app/api/hr/payroll/salary-structures/route"},resolvedPagePath:"/workspace/Hospital-Management-System/src/app/api/hr/payroll/salary-structures/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:m,workUnitAsyncStorage:y,serverHooks:x}=d;function E(){return(0,n.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:y})}},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73327:()=>{}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[7395,6088,2482],()=>t(61688));module.exports=s})();