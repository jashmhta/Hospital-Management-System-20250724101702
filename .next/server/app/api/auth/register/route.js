(()=>{var e={};e.id=1612,e.ids=[1612],e.modules={2179:(e,r,t)=>{"use strict";e.exports=t(44870)},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33159:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73327:()=>{},92133:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>f,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>c});var n={};t.r(n),t.d(n,{POST:()=>l});var s=t(2179),a=t(20540),o=t(57395),i=t(72482);!function(){var e=Error("Cannot find module '@opennextjs/cloudflare'");throw e.code="MODULE_NOT_FOUND",e}(),function(){var e=Error("Cannot find module '@/lib/authUtils'");throw e.code="MODULE_NOT_FOUND",e}();let u=i.z.object({username:i.z.string().min(3,"Username must be at least 3 characters long"),email:i.z.string().email("Invalid email address"),password:i.z.string().min(8,"Password must be at least 8 characters long"),full_name:i.z.string().optional(),phone_number:i.z.string().optional(),role_name:i.z.enum(["Admin","Doctor","Nurse","Receptionist","Lab Technician","Pharmacist","Patient"]).default("Patient")});async function l(e){try{let r=await e.json(),t=u.safeParse(r);if(!t.success)return new Response(JSON.stringify({error:"Invalid input",details:t.error.errors}),{status:400,headers:{"Content-Type":"application/json"}});let{username:n,email:s,password:a,full_name:o,phone_number:i,role_name:l}=t.data,d=(await Object(function(){var e=Error("Cannot find module '@opennextjs/cloudflare'");throw e.code="MODULE_NOT_FOUND",e}())()).env.DB;if(!d)throw Error("Database binding not found in Cloudflare environment.");let p=await d.prepare("SELECT role_id FROM Roles WHERE role_name = ?").bind(l).first();if(!p)return new Response(JSON.stringify({error:"Invalid role specified"}),{status:400,headers:{"Content-Type":"application/json"}});let c=p.role_id;if(await d.prepare("SELECT user_id FROM Users WHERE username = ? OR email = ?").bind(n,s).first())return new Response(JSON.stringify({error:"Username or email already exists"}),{status:409,headers:{"Content-Type":"application/json"}});let m=await Object(function(){var e=Error("Cannot find module '@/lib/authUtils'");throw e.code="MODULE_NOT_FOUND",e}())(a),f=await d.prepare("INSERT INTO Users (username, email, password_hash, full_name, phone_number, role_id) VALUES (?, ?, ?, ?, ?, ?)").bind(n,s,m,o??null,i??null,c).run();if(!f.success)throw Error(`Failed to register user: ${f.error}`);let h=f.meta.last_row_id;return null==h&&console.warn("Could not retrieve last_row_id after user insert."),new Response(JSON.stringify({message:"User registered successfully",userId:h}),{status:201,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Registration error:",e),new Response(JSON.stringify({error:"Internal Server Error",details:e instanceof Error?e.message:"An unexpected error occurred"}),{status:500,headers:{"Content-Type":"application/json"}})}}let d=new s.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"/workspace/Hospital-Management-System/src/app/api/auth/register/route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:p,workUnitAsyncStorage:c,serverHooks:m}=d;function f(){return(0,o.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:c})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[7395,2482],()=>t(92133));module.exports=n})();