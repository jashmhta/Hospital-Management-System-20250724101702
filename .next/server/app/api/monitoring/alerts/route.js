(()=>{var e={};e.id=870,e.ids=[870],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33159:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73327:()=>{},90559:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>h,routeModule:()=>c,serverHooks:()=>g,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>p});var s={};t.r(s),t.d(s,{GET:()=>u,POST:()=>l,PUT:()=>d});var o=t(2179),n=t(20540),a=t(57395),i=t(8306);async function u(e){try{let{searchParams:r}=new URL(e.url);if(r.get("ruleId"))return i.NextResponse.json({error:"Specific rule retrieval not implemented yet"},{status:501});return i.NextResponse.json({timestamp:new Date().toISOString(),status:"success",data:{rules:[{id:"db_response_time",name:"Database Response Time High",metric:"database.response_time",condition:"gt",threshold:2e3,duration:300,severity:"high",enabled:!0,notifications:["email","slack"]},{id:"error_rate_high",name:"Error Rate High",metric:"api.error_rate",condition:"gt",threshold:.05,duration:180,severity:"critical",enabled:!0,notifications:["email","slack","sms"]},{id:"memory_usage_high",name:"Memory Usage High",metric:"system.memory_usage",condition:"gt",threshold:.85,duration:600,severity:"medium",enabled:!0,notifications:["email"]}],recentAlerts:[{id:"alert_1704067200000",ruleId:"memory_usage_high",ruleName:"Memory Usage High",metric:"system.memory_usage",value:.87,threshold:.85,severity:"medium",timestamp:"2024-01-01T00:00:00.000Z",status:"resolved"}]}})}catch(e){return console.error("Alerts API error:",e),i.NextResponse.json({error:"Internal server error",message:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function l(e){try{let r=await e.json(),{action:t}=r;switch(t){case"create_rule":let s=r.rule;if(!s||!s.id||!s.name||!s.metric)return i.NextResponse.json({error:"Invalid rule data"},{status:400});return Object(function(){var e=Error("Cannot find module '@/lib/monitoring/metrics-collector'");throw e.code="MODULE_NOT_FOUND",e}()).addAlertRule(s),i.NextResponse.json({message:"Alert rule created",ruleId:s.id});case"update_rule":let o=r.rule;if(!o||!o.id)return i.NextResponse.json({error:"Invalid rule data"},{status:400});return Object(function(){var e=Error("Cannot find module '@/lib/monitoring/metrics-collector'");throw e.code="MODULE_NOT_FOUND",e}()).addAlertRule(o),i.NextResponse.json({message:"Alert rule updated",ruleId:o.id});case"delete_rule":let n=r.ruleId;if(!n)return i.NextResponse.json({error:"Rule ID is required"},{status:400});return Object(function(){var e=Error("Cannot find module '@/lib/monitoring/metrics-collector'");throw e.code="MODULE_NOT_FOUND",e}()).removeAlertRule(n),i.NextResponse.json({message:"Alert rule deleted",ruleId:n});case"test_alert":let a=r.rule;if(!a)return i.NextResponse.json({error:"Rule data is required for testing"},{status:400});return i.NextResponse.json({message:"Test alert triggered",testResult:{rule:a.name,notifications:a.notifications,timestamp:new Date().toISOString()}});default:return i.NextResponse.json({error:"Invalid action"},{status:400})}}catch(e){return console.error("Alerts API POST error:",e),i.NextResponse.json({error:"Internal server error",message:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function d(e){try{let{ruleId:r,enabled:t}=await e.json();if(!r||"boolean"!=typeof t)return i.NextResponse.json({error:"Rule ID and enabled status are required"},{status:400});return i.NextResponse.json({message:`Alert rule ${t?"enabled":"disabled"}`,ruleId:r,enabled:t})}catch(e){return console.error("Alerts API PUT error:",e),i.NextResponse.json({error:"Internal server error",message:e instanceof Error?e.message:"Unknown error"},{status:500})}}!function(){var e=Error("Cannot find module '@/lib/monitoring/metrics-collector'");throw e.code="MODULE_NOT_FOUND",e}();let c=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/monitoring/alerts/route",pathname:"/api/monitoring/alerts",filename:"route",bundlePath:"app/api/monitoring/alerts/route"},resolvedPagePath:"/workspace/Hospital-Management-System/src/app/api/monitoring/alerts/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:m,workUnitAsyncStorage:p,serverHooks:g}=c;function h(){return(0,a.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:p})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[7395,6088],()=>t(90559));module.exports=s})();