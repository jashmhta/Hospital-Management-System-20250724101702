(()=>{var e={};e.id=6292,e.ids=[6292],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33159:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73327:()=>{},80574:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>f,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{GET:()=>d,POST:()=>u,PUT:()=>p});var n=t(2179),o=t(20540),i=t(57395),a=t(8306);async function d(e){try{let{searchParams:r}=new URL(e.url),t=r.get("id"),s={};for(let[e,t]of r.entries())["patient_id","status","ward","bed_number","admission_date_from","admission_date_to","discharge_date_from","discharge_date_to","attending_doctor_id"].includes(e)&&("status"===e?"active"===t||"discharged"===t||"cancelled"===t?s[e]=t:console.warn(`Invalid status filter value received: ${t}`):s[e]=t);if(t){let e=Number.parseInt(t);if(Number.isNaN(e)||e<=0)return a.NextResponse.json({error:"Invalid admission ID provided"},{status:400});{let r=await Object(function(){var e=Error("Cannot find module '@/lib/ipd'");throw e.code="MODULE_NOT_FOUND",e}())(e);if(!r)return a.NextResponse.json({error:"Admission not found"},{status:404});return a.NextResponse.json({admission:r})}}let n=await Object(function(){var e=Error("Cannot find module '@/lib/ipd'");throw e.code="MODULE_NOT_FOUND",e}())(s);return a.NextResponse.json({admissions:n})}catch(r){console.error("Error fetching admissions:",r);let e=r instanceof Error?r.message:"An unknown error occurred";return a.NextResponse.json({error:"Failed to fetch admissions",details:e},{status:500})}}async function u(e){try{let r=await e.json();if(!r.patient_id)return a.NextResponse.json({error:"Missing required fields (e.g., patient_id)"},{status:400});let t=await Object(function(){var e=Error("Cannot find module '@/lib/ipd'");throw e.code="MODULE_NOT_FOUND",e}())(r);return a.NextResponse.json({admission:t},{status:201})}catch(r){console.error("Error creating admission:",r);let e=r instanceof Error?r.message:"An unknown error occurred";return a.NextResponse.json({error:"Failed to create admission",details:e},{status:500})}}async function p(e){try{let r=e.nextUrl.pathname.split("/").pop(),t=r?Number.parseInt(r):0;if(Number.isNaN(t)||t<=0)return a.NextResponse.json({error:"Invalid or missing admission ID in URL path"},{status:400});let s=await e.json(),n=await Object(function(){var e=Error("Cannot find module '@/lib/ipd'");throw e.code="MODULE_NOT_FOUND",e}())(t,s);if(!n)return a.NextResponse.json({error:"Admission not found or update failed"},{status:404});return a.NextResponse.json({admission:n})}catch(r){console.error("Error updating admission:",r);let e=r instanceof Error?r.message:"An unknown error occurred";return a.NextResponse.json({error:"Failed to update admission",details:e},{status:500})}}!function(){var e=Error("Cannot find module '@/lib/ipd'");throw e.code="MODULE_NOT_FOUND",e}();let c=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/ipd/admissions/route",pathname:"/api/ipd/admissions",filename:"route",bundlePath:"app/api/ipd/admissions/route"},resolvedPagePath:"/workspace/Hospital-Management-System/src/app/api/ipd/admissions/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:m,serverHooks:f}=c;function x(){return(0,i.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:m})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[7395,6088],()=>t(80574));module.exports=s})();