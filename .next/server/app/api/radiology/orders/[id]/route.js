(()=>{var e={};e.id=6250,e.ids=[6250],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33159:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61537:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>f,routeModule:()=>l,serverHooks:()=>O,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>g});var o={};t.r(o),t.d(o,{DELETE:()=>c,GET:()=>d,PUT:()=>u});var s=t(2179),n=t(20540),a=t(57395),i=t(8306);async function d(e,{params:r}){let t=await Object(function(){var e=Error("Cannot find module '@/lib/session'");throw e.code="MODULE_NOT_FOUND",e}())();if(!t?.user||!await Object(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}())(e,["Admin","Doctor","Receptionist","Technician","Radiologist"]))return i.NextResponse.json({error:"Unauthorized"},{status:403});let{id:o}=await r,s=process.env.DB;try{let e=await s.prepare("SELECT ro.*, pt.name as procedure_name, p.name as patient_name, rd.name as referring_doctor_name FROM RadiologyOrders ro JOIN RadiologyProcedureTypes pt ON ro.procedure_type_id = pt.id JOIN Patients p ON ro.patient_id = p.id LEFT JOIN Users rd ON ro.referring_doctor_id = rd.id WHERE ro.id = ?").bind(o).first();if(!e)return i.NextResponse.json({error:"Radiology order not found"},{status:404});return i.NextResponse.json(e)}catch(r){let e=r instanceof Error?r.message:String(r);return console.error({message:"Error fetching radiology order",error:e}),i.NextResponse.json({error:"Failed to fetch radiology order",details:e},{status:500})}}async function u(e,{params:r}){let t=await Object(function(){var e=Error("Cannot find module '@/lib/session'");throw e.code="MODULE_NOT_FOUND",e}())();if(!t?.user||!await Object(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}())(e,["Admin","Receptionist","Technician"]))return i.NextResponse.json({error:"Unauthorized"},{status:403});let{id:o}=await r,s=process.env.DB;try{let{status:r,priority:t,clinical_indication:n,procedure_type_id:a}=await e.json(),d=new Date().toISOString(),u={};if(void 0!==r&&(u.status=r),void 0!==t&&(u.priority=t),void 0!==n&&(u.clinical_indication=n),void 0!==a&&(u.procedure_type_id=a),0===Object.keys(u).length)return i.NextResponse.json({error:"No fields provided for update"},{status:400});u.updated_at=d;let c=Object.keys(u).map(e=>`${e} = ?`).join(", "),l=[...Object.values(u),o],p=`UPDATE RadiologyOrders SET ${c} WHERE id = ?`,g=await s.prepare(p).bind(...l).run(),O=g.meta?.changes??+!!g.success;if(0===O){if(!await s.prepare("SELECT id FROM RadiologyOrders WHERE id = ?").bind(o).first())return i.NextResponse.json({error:"Radiology order not found"},{status:404});return i.NextResponse.json({id:o,status:"Radiology order update processed (no changes detected)"})}return i.NextResponse.json({id:o,status:"Radiology order updated"})}catch(r){let e=r instanceof Error?r.message:String(r);return console.error({message:"Error updating radiology order",error:e}),i.NextResponse.json({error:"Failed to update radiology order",details:e},{status:500})}}async function c(e,{params:r}){let t=await Object(function(){var e=Error("Cannot find module '@/lib/session'");throw e.code="MODULE_NOT_FOUND",e}())();if(!t?.user||!await Object(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}())(e,["Admin","Receptionist"]))return i.NextResponse.json({error:"Unauthorized"},{status:403});let{id:o}=await r,s=process.env.DB;try{let e=new Date().toISOString(),r=await s.prepare("UPDATE RadiologyOrders SET status = ?, updated_at = ? WHERE id = ? AND status != ?").bind("cancelled",e,o,"cancelled").run(),t=r.meta?.changes??+!!r.success;if(0===t){let e=await s.prepare("SELECT id, status FROM RadiologyOrders WHERE id = ?").bind(o).first();if(!e)return i.NextResponse.json({error:"Radiology order not found"},{status:404});if("object"==typeof e&&void 0!==e&&"status"in e&&"cancelled"===e.status)return i.NextResponse.json({id:o,status:"Radiology order already cancelled"});return i.NextResponse.json({error:"Failed to cancel radiology order (unknown reason)"},{status:500})}return i.NextResponse.json({id:o,status:"Radiology order cancelled"})}catch(r){let e=r instanceof Error?r.message:String(r);return console.error({message:"Error cancelling radiology order",error:e}),i.NextResponse.json({error:"Failed to cancel radiology order",details:e},{status:500})}}!function(){var e=Error("Cannot find module '@/lib/session'");throw e.code="MODULE_NOT_FOUND",e}(),function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}();let l=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/radiology/orders/[id]/route",pathname:"/api/radiology/orders/[id]",filename:"route",bundlePath:"app/api/radiology/orders/[id]/route"},resolvedPagePath:"/workspace/Hospital-Management-System/src/app/api/radiology/orders/[id]/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:p,workUnitAsyncStorage:g,serverHooks:O}=l;function f(){return(0,a.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:g})}},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73327:()=>{}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[7395,6088],()=>t(61537));module.exports=o})();