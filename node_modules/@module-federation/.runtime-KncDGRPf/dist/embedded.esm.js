function getRuntime() {
    // @ts-ignore
    const runtime = __webpack_require__.federation.runtime;
    if (!runtime) {
        throw new Error('Federation runtime accessed before instantiation or installation');
    }
    return runtime;
}
const registerGlobalPlugins = (...args)=>{
    return getRuntime().registerGlobalPlugins(...args);
};
const getRemoteEntry = (...args)=>{
    return getRuntime().getRemoteEntry(...args);
};
const getRemoteInfo = (...args)=>{
    return getRuntime().getRemoteInfo(...args);
};
const loadScript = (...args)=>{
    return getRuntime().loadScript(...args);
};
const loadScriptNode = (...args)=>{
    return getRuntime().loadScriptNode(...args);
};
const init = (...args)=>{
    return getRuntime().init(...args);
};
const loadRemote = (...args)=>{
    return getRuntime().loadRemote(...args);
};
const loadShare = (...args)=>{
    return getRuntime().loadShare(...args);
};
const loadShareSync = (...args)=>{
    return getRuntime().loadShareSync(...args);
};
const preloadRemote = (...args)=>{
    return getRuntime().preloadRemote(...args);
};
const registerRemotes = (...args)=>{
    return getRuntime().registerRemotes(...args);
};
const registerPlugins = (...args)=>{
    return getRuntime().registerPlugins(...args);
};
const getInstance = (...args)=>{
    return getRuntime().getInstance(...args);
};
class FederationHost {
    _getInstance() {
        if (!this._instance) {
            const RealFederationHost = getRuntime().FederationHost;
            this._instance = new RealFederatio