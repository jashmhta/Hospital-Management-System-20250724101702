// Patient Portal Schema
// This schema extends the Hospital Management System with patient portal functionality

// PatientPortalUser model
model PatientPortalUser {
  id                 String               @id @default(uuid())
  patientId          String               @unique // Reference to Patient model
  username           String               @unique
  email              String               @unique
  passwordHash       String
  phoneNumber        String?
  isActive           Boolean              @default(true)
  isVerified         Boolean              @default(false)
  verificationCode   String?
  verificationExpiry DateTime?
  lastLoginDate      DateTime?
  failedLoginAttempts Int                 @default(0)
  lockedUntil        DateTime?
  preferredLanguage  String               @default("en")
  timeZone           String               @default("UTC")
  pushNotifications  Boolean              @default(true)
  emailNotifications Boolean              @default(true)
  smsNotifications   Boolean              @default(false)
  termsAccepted      Boolean              @default(false)
  termsAcceptedDate  DateTime?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  // Relations
  sessions           PatientPortalSession[]
  accessLogs         PatientPortalAccessLog[]
  securityQuestions  SecurityQuestion[]
  consents           PatientConsent[]
  appointments       AppointmentRequest[]
  messages           PortalMessage[]
  documentRequests   DocumentRequest[]
  medicationRefills  MedicationRefillRequest[]
  healthJournals     HealthJournal[]
  dashboardSettings  PatientDashboardSetting[]
  surveys            PatientSurvey[]
  
  @@index([email])
  @@index([isActive])
  @@index([isVerified])
}

// PatientPortalSession model
model PatientPortalSession {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  token              String               @unique
  ipAddress          String?
  userAgent          String?
  deviceInfo         String?
  isValid            Boolean              @default(true)
  expiresAt          DateTime
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([token])
  @@index([isValid])
  @@index([expiresAt])
}

// PatientPortalAccessLog model
model PatientPortalAccessLog {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  accessDate         DateTime
  action             String               // Login, Logout, ViewRecord, UpdateProfile, etc.
  ipAddress          String?
  userAgent          String?
  deviceInfo         String?
  status             String               // Success, Failure
  details            String?
  createdAt          DateTime             @default(now())
  
  @@index([userId])
  @@index([accessDate])
  @@index([action])
  @@index([status])
}

// SecurityQuestion model
model SecurityQuestion {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  questionText       String
  answerHash         String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
}

// PatientConsent model
model PatientConsent {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  consentType        String               // TermsOfUse, PrivacyPolicy, DataSharing, ResearchParticipation
  consentVersion     String
  consentText        String
  isAccepted         Boolean
  acceptedDate       DateTime?
  ipAddress          String?
  userAgent          String?
  expirationDate     DateTime?
  documentUrl        String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([consentType])
  @@index([isAccepted])
}

// AppointmentRequest model
model AppointmentRequest {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  requestNumber      String               @unique
  preferredDate1     DateTime
  preferredDate2     DateTime?
  preferredDate3     DateTime?
  appointmentType    String               // New Patient, Follow-up, Consultation
  specialtyId        String?              // Reference to medical specialty
  providerPreference String?              // Provider ID or "any"
  reasonForVisit     String
  insuranceInfo      String?
  status             String               // Submitted, Pending, Approved, Rejected, Rescheduled, Cancelled
  appointmentId      String?              // Reference to created appointment if approved
  notes              String?
  responseMessage    String?
  responseDate       DateTime?
  respondedById      String?              // Staff ID who responded to the request
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([preferredDate1])
  @@index([appointmentType])
  @@index([status])
}

// PortalMessage model
model PortalMessage {
  id                 String               @id @default(uuid())
  messageNumber      String               @unique
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  direction          String               // Inbound, Outbound
  subject            String
  messageText        String
  isUrgent           Boolean              @default(false)
  isRead             Boolean              @default(false)
  readDate           DateTime?
  sentDate           DateTime             @default(now())
  senderId           String               // User ID or Staff ID
  senderType         String               // Patient, Provider, Staff
  recipientId        String               // User ID or Staff ID
  recipientType      String               // Patient, Provider, Staff
  parentMessageId    String?              // Reference to parent message if this is a reply
  attachmentUrls     String[]             // Array of attachment URLs
  status             String               // Sent, Delivered, Failed
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([senderId])
  @@index([recipientId])
  @@index([sentDate])
  @@index([isRead])
  @@index([isUrgent])
  @@index([status])
}

// DocumentRequest model
model DocumentRequest {
  id                 String               @id @default(uuid())
  requestNumber      String               @unique
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  requestType        String               // MedicalRecords, LabResults, ImagingResults, Prescription
  documentType       String?              // Specific document type if applicable
  dateRangeStart     DateTime?
  dateRangeEnd       DateTime?
  purposeOfRequest   String
  deliveryMethod     String               // Portal, Email, Mail, Fax
  deliveryDetails    String?              // Email, address or fax number if applicable
  status             String               // Submitted, Processing, Completed, Denied
  fulfillmentDate    DateTime?
  fulfilledById      String?              // Staff ID who fulfilled the request
  denialReason       String?
  notes              String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([requestType])
  @@index([status])
}

// MedicationRefillRequest model
model MedicationRefillRequest {
  id                 String               @id @default(uuid())
  requestNumber      String               @unique
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  medicationId       String               // Reference to Medication model
  medicationName     String
  prescriptionNumber String?
  pharmacyName       String?
  pharmacyPhone      String?
  pharmacyAddress    String?
  urgencyLevel       String               // Normal, Urgent
  lastFillDate       DateTime?
  daysSupplyRemaining Int?
  notes              String?
  status             String               // Submitted, Reviewing, Approved, Denied, Completed
  statusUpdateDate   DateTime?
  updatedById        String?              // Staff ID who updated the status
  statusNotes        String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([medicationId])
  @@index([urgencyLevel])
  @@index([status])
}

// HealthJournal model
model HealthJournal {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  entryDate          DateTime
  entryType          String               // Symptom, Measurement, Medication, Exercise, Diet, General
  title              String
  description        String
  moodRating         Int?                 // 1-10 scale if applicable
  painLevel          Int?                 // 1-10 scale if applicable
  measurements       Json?                // JSON containing measurements (weight, blood pressure, etc.)
  medications        String?              // Medications taken
  attachmentUrls     String[]             // Array of attachment URLs
  isSharedWithProvider Boolean            @default(false)
  sharedWithProviders String[]            // Array of provider IDs
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([entryDate])
  @@index([entryType])
  @@index([isSharedWithProvider])
}

// PatientDashboardSetting model
model PatientDashboardSetting {
  id                 String               @id @default(uuid())
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  widgetType         String               // Appointments, Medications, LabResults, Vitals, Messages
  isEnabled          Boolean              @default(true)
  displayOrder       Int
  displayDuration    String?              // Last30Days, Last3Months, Last6Months, LastYear, All
  customSettings     Json?                // JSON containing widget-specific settings
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@unique([userId, widgetType])
  @@index([userId])
  @@index([widgetType])
  @@index([isEnabled])
}

// PatientSurvey model
model PatientSurvey {
  id                 String               @id @default(uuid())
  surveyNumber       String               @unique
  userId             String
  user               PatientPortalUser    @relation(fields: [userId], references: [id])
  surveyTemplateId   String               // Reference to SurveyTemplate model
  surveyTitle        String
  assignedDate       DateTime
  dueDate            DateTime?
  completionDate     DateTime?
  status             String               // Assigned, Started, Completed, Expired
  responses          Json?                // JSON containing survey responses
  score              Int?                 // Calculated score if applicable
  followUpRequired   Boolean              @default(false)
  followUpNotes      String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([surveyTemplateId])
  @@index([assignedDate])
  @@index([dueDate])
  @@index([status])
}

// SurveyTemplate model
model SurveyTemplate {
  id                 String               @id @default(uuid())
  templateCode       String               @unique
  title              String
  description        String?
  surveyType         String               // Satisfaction, Clinical, Screening, Assessment
  questions          Json                 // JSON containing questions and answer options
  scoringMethod      String?              // Sum, Average, Custom
  scoringLogic       Json?                // JSON containing scoring logic if applicable
  estimatedDuration  Int?                 // Estimated time to complete in minutes
  isActive           Boolean              @default(true)
  createdById        String               // Staff ID who created the template
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([surveyType])
  @@index([isActive])
}

// PatientPreferences model
model PatientPreferences {
  id                 String               @id @default(uuid())
  patientId          String               @unique // Reference to Patient model
  communicationPreferences Json           // JSON containing communication preferences
  portalAlerts       Json                 // JSON containing portal alert settings
  privacySettings    Json                 // JSON containing privacy settings
  accessControlList  Json?                // JSON containing authorized people who can access account
  demographicDataSharing Boolean          @default(false)
  clinicalDataSharing Boolean             @default(false)
  researchParticipation Boolean           @default(false)
  marketingOptIn     Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([patientId])
}

// PatientDocument model
model PatientDocument {
  id                 String               @id @default(uuid())
  documentNumber     String               @unique
  patientId          String               // Reference to Patient model
  documentType       String               // MedicalRecord, LabResult, ImagingResult, Prescription, Education
  documentTitle      String
  description        String?
  documentDate       DateTime
  documentUrl        String
  fileType           String               // PDF, JPEG, PNG, etc.
  fileSize           Int                  // Size in bytes
  isSharedWithPatient Boolean             @default(false)
  sharedDate         DateTime?
  viewedByPatient    Boolean              @default(false)
  viewedDate         DateTime?
  uploadedBy         String               // Staff ID who uploaded the document
  uploadedDate       DateTime             @default(now())
  expirationDate     DateTime?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([patientId])
  @@index([documentType])
  @@index([documentDate])
  @@index([isSharedWithPatient])
  @@index([viewedByPatient])
}

// PatientMedication model (for portal display)
model PatientMedication {
  id                 String               @id @default(uuid())
  patientId          String               // Reference to Patient model
  medicationId       String               // Reference to Medication model
  medicationName     String
  dosage             String
  frequency          String
  route              String               // Oral, IV, etc.
  startDate          DateTime
  endDate            DateTime?
  instructions       String?
  reasonForMedication String?
  prescribingProvider String               // Provider name or ID
  pharmacyName       String?
  pharmacyPhone      String?
  isActive           Boolean              @default(true)
  isCurrent          Boolean              @default(true)
  refillsRemaining   Int?
  refillDueDate      DateTime?
  lastRefillDate     DateTime?
  sideEffectsInfo    String?
  attachmentUrls     String[]             // Array of attachment URLs
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([patientId])
  @@index([medicationId])
  @@index([isActive])
  @@index([isCurrent])
}

// PatientAppointment model (for portal display)
model PatientAppointment {
  id                 String               @id @default(uuid())
  patientId          String               // Reference to Patient model
  appointmentId      String               // Reference to Appointment model
  appointmentType    String               // New Patient, Follow-up, Consultation
  providerId         String               // Provider ID
  providerName       String               // Provider name
  specialtyType      String?              // Specialty type
  departmentName     String?              // Department name
  locationName       String?              // Location name
  locationAddress    String?              // Location address
  appointmentDate    DateTime
  startTime          DateTime
  endTime            DateTime
  duration           Int                  // Duration in minutes
  status             String               // Scheduled, Confirmed, Completed, Cancelled, No-Show
  instructions       String?              // Pre-appointment instructions
  preparationRequired String?             // Preparation required
  telemedicineUrl    String?              // URL for telemedicine appointment
  telemedicineInstructions String?        // Instructions for telemedicine
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([patientId])
  @@index([appointmentId])
  @@index([providerId])
  @@index([appointmentDate])
  @@index([status])
}

// PatientLabResult model (for portal display)
model PatientLabResult {
  id                 String               @id @default(uuid())
  patientId          String               // Reference to Patient model
  labResultId        String               // Reference to LabResult model
  testName           String
  testDate           DateTime
  resultDate         DateTime
  resultStatus       String               // Preliminary, Final
  testCategory       String               // Blood, Urine, Imaging, etc.
  orderingProvider   String               // Provider name or ID
  performingLab      String?
  result             String
  unit               String?
  referenceRange     String?
  abnormalFlag       String?              // Normal, Low, High, Critical
  interpretation     String?
  notes              String?
  isViewed           Boolean              @default(false)
  viewedDate         DateTime?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([patientId])
  @@index([labResultId])
  @@index([testDate])
  @@index([resultDate])
  @@index([testCategory])
  @@index([abnormalFlag])
  @@index([isViewed])
}

// PatientBilling model (for portal display)
model PatientBilling {
  id                 String               @id @default(uuid())
  patientId          String               // Reference to Patient model
  billId             String               // Reference to Bill model
  invoiceNumber      String
  serviceDate        DateTime
  billingDate        DateTime
  dueDate            DateTime
  totalAmount        Float
  insuranceAmount    Float?
  patientResponsibility Float
  paymentStatus      String               // Unpaid, Partial, Paid, Overdue
  paidAmount         Float                @default(0)
  lastPaymentDate    DateTime?
  billType           String               // Service, Pharmacy, Equipment, etc.
  serviceDescription String
  attachmentUrl      String?              // URL to detailed bill PDF
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  // Relations
  payments           PatientPayment[]
  
  @@index([patientId])
  @@index([billId])
  @@index([invoiceNumber])
  @@index([serviceDate])
  @@index([dueDate])
  @@index([paymentStatus])
}

// PatientPayment model (for portal display)
model PatientPayment {
  id                 String               @id @default(uuid())
  patientBillingId   String
  patientBilling     PatientBilling       @relation(fields: [patientBillingId], references: [id])
  paymentDate        DateTime
  amount             Float
  paymentMethod      String               // Credit Card, Bank Transfer, PayPal, etc.
  transactionId      String?
  status             String               // Processing, Completed, Failed, Refunded
  receiptUrl         String?
  notes              String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([patientBillingId])
  @@index([paymentDate])
  @@index([status])
}

// TelemedAppointment model
model TelemedAppointment {
  id                 String               @id @default(uuid())
  appointmentId      String               @unique // Reference to Appointment model
  patientId          String               // Reference to Patient model
  providerId         String               // Reference to Provider model
  scheduledTime      DateTime
  actualStartTime    DateTime?
  actualEndTime      DateTime?
  status             String               // Scheduled, In Progress, Completed, Cancelled, No-Show
  meetingUrl         String
  meetingId          String
  meetingPassword    String?
  patientJoinTime    DateTime?
  providerJoinTime   DateTime?
  connectionQuality  String?              // Excellent, Good, Fair, Poor
  technicalIssues    String?
  followUpRequired   Boolean              @default(false)
  followUpNotes      String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([appointmentId])
  @@index([patientId])
  @@index([providerId])
  @@index([scheduledTime])
  @@index([status])
}

// PortalAnnouncement model
model PortalAnnouncement {
  id                 String               @id @default(uuid())
  title              String
  content            String
  announcementType   String               // System, Maintenance, Feature, News, Alert
  startDate          DateTime
  endDate            DateTime?
  priority           String               // Low, Medium, High, Critical
  targetAudience     String               // All, Specific
  targetPatientGroups String[]            // Array of patient group IDs if target is Specific
  isActive           Boolean              @default(true)
  publishedById      String               // Staff ID who published the announcement
  attachmentUrls     String[]             // Array of attachment URLs
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([announcementType])
  @@index([startDate])
  @@index([endDate])
  @@index([priority])
  @@index([isActive])
}

// TwoFactorAuth model
model TwoFactorAuth {
  id                 String               @id @default(uuid())
  userId             String               @unique // Reference to PatientPortalUser model
  isEnabled          Boolean              @default(false)
  method             String               // SMS, Email, Authenticator
  secret             String?              // For authenticator app
  phone              String?              // For SMS
  email              String?              // For email
  lastVerifiedDate   DateTime?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
  @@index([userId])
  @@index([isEnabled])
  @@index([method])
}