package com.hospital.hms.hieintegration.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * HIE Data Exchange Entity
 * 
 * Represents individual data exchange transactions between
 * the hospital and external HIE networks.
 * 
 * @author HMS Enterprise Team
 * @version 1.0.0
 */
@Entity
@Table(name = \"hie_data_exchanges\", indexes = {\n    @Index(name = \"idx_exchange_hie\", columnList = \"hie_id\"),\n    @Index(name = \"idx_exchange_patient\", columnList = \"patient_id\"),\n    @Index(name = \"idx_exchange_status\", columnList = \"exchange_status\"),\n    @Index(name = \"idx_exchange_type\", columnList = \"exchange_type\"),\n    @Index(name = \"idx_exchange_date\", columnList = \"exchange_date\"),\n    @Index(name = \"idx_exchange_transaction\", columnList = \"transaction_id\")\n})\n@EntityListeners(AuditingEntityListener.class)\npublic class HieDataExchange {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Column(name = \"id\", updatable = false, nullable = false)\n    private UUID id;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"hie_id\", nullable = false)\n    @NotNull(message = \"HIE is required\")\n    private HealthInformationExchange hie;\n\n    @Column(name = \"transaction_id\", unique = true, nullable = false, length = 100)\n    @NotBlank(message = \"Transaction ID is required\")\n    @Size(max = 100, message = \"Transaction ID must not exceed 100 characters\")\n    private String transactionId;\n\n    @Column(name = \"patient_id\", length = 100)\n    @Size(max = 100, message = \"Patient ID must not exceed 100 characters\")\n    private String patientId;\n\n    @Column(name = \"external_patient_id\", length = 100)\n    @Size(max = 100, message = \"External patient ID must not exceed 100 characters\")\n    private String externalPatientId;\n\n    @Column(name = \"exchange_type\", nullable = false, length = 30)\n    @Enumerated(EnumType.STRING)\n    @NotNull(message = \"Exchange type is required\")\n    private ExchangeType exchangeType;\n\n    @Column(name = \"exchange_direction\", nullable = false, length = 20)\n    @Enumerated(EnumType.STRING)\n    @NotNull(message = \"Exchange direction is required\")\n    private ExchangeDirection exchangeDirection;\n\n    @Column(name = \"exchange_status\", nullable = false, length = 20)\n    @Enumerated(EnumType.STRING)\n    @NotNull(message = \"Exchange status is required\")\n    private ExchangeStatus exchangeStatus = ExchangeStatus.PENDING;\n\n    @Column(name = \"data_format\", length = 20)\n    @Enumerated(EnumType.STRING)\n    private DataFormat dataFormat;\n\n    @Column(name = \"message_type\", length = 50)\n    @Size(max = 50, message = \"Message type must not exceed 50 characters\")\n    private String messageType;\n\n    @Column(name = \"resource_type\", length = 50)\n    @Size(max = 50, message = \"Resource type must not exceed 50 characters\")\n    private String resourceType;\n\n    @Column(name = \"request_payload\", columnDefinition = \"TEXT\")\n    private String requestPayload;\n\n    @Column(name = \"response_payload\", columnDefinition = \"TEXT\")\n    private String responsePayload;\n\n    @Column(name = \"error_message\", columnDefinition = \"TEXT\")\n    private String errorMessage;\n\n    @Column(name = \"error_code\", length = 50)\n    @Size(max = 50, message = \"Error code must not exceed 50 characters\")\n    private String errorCode;\n\n    @Column(name = \"retry_count\")\n    @Min(value = 0, message = \"Retry count must be non-negative\")\n    private Integer retryCount = 0;\n\n    @Column(name = \"max_retries\")\n    @Min(value = 0, message = \"Max retries must be non-negative\")\n    private Integer maxRetries = 3;\n\n    @Column(name = \"response_time_ms\")\n    @Min(value = 0, message = \"Response time must be non-negative\")\n    private Long responseTimeMs;\n\n    @Column(name = \"file_size_bytes\")\n    @Min(value = 0, message = \"File size must be non-negative\")\n    private Long fileSizeBytes;\n\n    @Column(name = \"records_count\")\n    @Min(value = 0, message = \"Records count must be non-negative\")\n    private Integer recordsCount;\n\n    @Column(name = \"exchange_date\", nullable = false)\n    @NotNull(message = \"Exchange date is required\")\n    private LocalDateTime exchangeDate;\n\n    @Column(name = \"started_date\")\n    private LocalDateTime startedDate;\n\n    @Column(name = \"completed_date\")\n    private LocalDateTime completedDate;\n\n    @Column(name = \"next_retry_date\")\n    private LocalDateTime nextRetryDate;\n\n    @Column(name = \"expiry_date\")\n    private LocalDateTime expiryDate;\n\n    // Audit and tracking\n    @Column(name = \"correlation_id\", length = 100)\n    @Size(max = 100, message = \"Correlation ID must not exceed 100 characters\")\n    private String correlationId;\n\n    @Column(name = \"source_system\", length = 100)\n    @Size(max = 100, message = \"Source system must not exceed 100 characters\")\n    private String sourceSystem;\n\n    @Column(name = \"target_system\", length = 100)\n    @Size(max = 100, message = \"Target system must not exceed 100 characters\")\n    private String targetSystem;\n\n    @Column(name = \"priority\", length = 20)\n    @Enumerated(EnumType.STRING)\n    private ExchangePriority priority = ExchangePriority.NORMAL;\n\n    @Column(name = \"tags\", length = 500)\n    @Size(max = 500, message = \"Tags must not exceed 500 characters\")\n    private String tags;\n\n    @Column(name = \"metadata\", columnDefinition = \"TEXT\")\n    private String metadata;\n\n    @CreatedDate\n    @Column(name = \"created_date\", nullable = false, updatable = false)\n    private LocalDateTime createdDate;\n\n    @Column(name = \"created_by\", length = 100)\n    @Size(max = 100, message = \"Created by must not exceed 100 characters\")\n    private String createdBy;\n\n    // Constructors\n    public HieDataExchange() {}\n\n    // Getters and Setters\n    public UUID getId() {\n        return id;\n    }\n\n    public void setId(UUID id) {\n        this.id = id;\n    }\n\n    public HealthInformationExchange getHie() {\n        return hie;\n    }\n\n    public void setHie(HealthInformationExchange hie) {\n        this.hie = hie;\n    }\n\n    public String getTransactionId() {\n        return transactionId;\n    }\n\n    public void setTransactionId(String transactionId) {\n        this.transactionId = transactionId;\n    }\n\n    public String getPatientId() {\n        return patientId;\n    }\n\n    public void setPatientId(String patientId) {\n        this.patientId = patientId;\n    }\n\n    public String getExternalPatientId() {\n        return externalPatientId;\n    }\n\n    public void setExternalPatientId(String externalPatientId) {\n        this.externalPatientId = externalPatientId;\n    }\n\n    public ExchangeType getExchangeType() {\n        return exchangeType;\n    }\n\n    public void setExchangeType(ExchangeType exchangeType) {\n        this.exchangeType = exchangeType;\n    }\n\n    public ExchangeDirection getExchangeDirection() {\n        return exchangeDirection;\n    }\n\n    public void setExchangeDirection(ExchangeDirection exchangeDirection) {\n        this.exchangeDirection = exchangeDirection;\n    }\n\n    public ExchangeStatus getExchangeStatus() {\n        return exchangeStatus;\n    }\n\n    public void setExchangeStatus(ExchangeStatus exchangeStatus) {\n        this.exchangeStatus = exchangeStatus;\n    }\n\n    public DataFormat getDataFormat() {\n        return dataFormat;\n    }\n\n    public void setDataFormat(DataFormat dataFormat) {\n        this.dataFormat = dataFormat;\n    }\n\n    public String getMessageType() {\n        return messageType;\n    }\n\n    public void setMessageType(String messageType) {\n        this.messageType = messageType;\n    }\n\n    public String getResourceType() {\n        return resourceType;\n    }\n\n    public void setResourceType(String resourceType) {\n        this.resourceType = resourceType;\n    }\n\n    public String getRequestPayload() {\n        return requestPayload;\n    }\n\n    public void setRequestPayload(String requestPayload) {\n        this.requestPayload = requestPayload;\n    }\n\n    public String getResponsePayload() {\n        return responsePayload;\n    }\n\n    public void setResponsePayload(String responsePayload) {\n        this.responsePayload = responsePayload;\n    }\n\n    public String getErrorMessage() {\n        return errorMessage;\n    }\n\n    public void setErrorMessage(String errorMessage) {\n        this.errorMessage = errorMessage;\n    }\n\n    public String getErrorCode() {\n        return errorCode;\n    }\n\n    public void setErrorCode(String errorCode) {\n        this.errorCode = errorCode;\n    }\n\n    public Integer getRetryCount() {\n        return retryCount;\n    }\n\n    public void setRetryCount(Integer retryCount) {\n        this.retryCount = retryCount;\n    }\n\n    public Integer getMaxRetries() {\n        return maxRetries;\n    }\n\n    public void setMaxRetries(Integer maxRetries) {\n        this.maxRetries = maxRetries;\n    }\n\n    public Long getResponseTimeMs() {\n        return responseTimeMs;\n    }\n\n    public void setResponseTimeMs(Long responseTimeMs) {\n        this.responseTimeMs = responseTimeMs;\n    }\n\n    public Long getFileSizeBytes() {\n        return fileSizeBytes;\n    }\n\n    public void setFileSizeBytes(Long fileSizeBytes) {\n        this.fileSizeBytes = fileSizeBytes;\n    }\n\n    public Integer getRecordsCount() {\n        return recordsCount;\n    }\n\n    public void setRecordsCount(Integer recordsCount) {\n        this.recordsCount = recordsCount;\n    }\n\n    public LocalDateTime getExchangeDate() {\n        return exchangeDate;\n    }\n\n    public void setExchangeDate(LocalDateTime exchangeDate) {\n        this.exchangeDate = exchangeDate;\n    }\n\n    public LocalDateTime getStartedDate() {\n        return startedDate;\n    }\n\n    public void setStartedDate(LocalDateTime startedDate) {\n        this.startedDate = startedDate;\n    }\n\n    public LocalDateTime getCompletedDate() {\n        return completedDate;\n    }\n\n    public void setCompletedDate(LocalDateTime completedDate) {\n        this.completedDate = completedDate;\n    }\n\n    public LocalDateTime getNextRetryDate() {\n        return nextRetryDate;\n    }\n\n    public void setNextRetryDate(LocalDateTime nextRetryDate) {\n        this.nextRetryDate = nextRetryDate;\n    }\n\n    public LocalDateTime getExpiryDate() {\n        return expiryDate;\n    }\n\n    public void setExpiryDate(LocalDateTime expiryDate) {\n        this.expiryDate = expiryDate;\n    }\n\n    public String getCorrelationId() {\n        return correlationId;\n    }\n\n    public void setCorrelationId(String correlationId) {\n        this.correlationId = correlationId;\n    }\n\n    public String getSourceSystem() {\n        return sourceSystem;\n    }\n\n    public void setSourceSystem(String sourceSystem) {\n        this.sourceSystem = sourceSystem;\n    }\n\n    public String getTargetSystem() {\n        return targetSystem;\n    }\n\n    public void setTargetSystem(String targetSystem) {\n        this.targetSystem = targetSystem;\n    }\n\n    public ExchangePriority getPriority() {\n        return priority;\n    }\n\n    public void setPriority(ExchangePriority priority) {\n        this.priority = priority;\n    }\n\n    public String getTags() {\n        return tags;\n    }\n\n    public void setTags(String tags) {\n        this.tags = tags;\n    }\n\n    public String getMetadata() {\n        return metadata;\n    }\n\n    public void setMetadata(String metadata) {\n        this.metadata = metadata;\n    }\n\n    public LocalDateTime getCreatedDate() {\n        return createdDate;\n    }\n\n    public void setCreatedDate(LocalDateTime createdDate) {\n        this.createdDate = createdDate;\n    }\n\n    public String getCreatedBy() {\n        return createdBy;\n    }\n\n    public void setCreatedBy(String createdBy) {\n        this.createdBy = createdBy;\n    }\n}
